name: Deploy Node.js Application to Azure Ubuntu Server

on:
  push:
    branches:
      - main  # This workflow will trigger when you push to the 'main' branch. Change this if needed.

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
            node-version: '18.18.0'  # Set the Node.js version your app uses.

      - name: Install dependencies
        run: npm install

      # - name: Build the application
      #   run: npm run build  # Modify this if your app doesn't need to be built.

      - name: Prepare SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
        shell: bash

      - name: Add Server to Known Hosts
        run: |
          ssh-keyscan -H 3.84.5.105 >> ~/.ssh/known_hosts
        shell: bash

      - name: Deploy to Azure Ubuntu Server
        env:
          DB_USER: ${{ env.DB_USER }}
          DB_PASS: ${{ env.DB_PASS }}
          DB_HOST: ${{ env.DB_HOST || '127.0.0.1' }}
          DB_NAME: ${{ env.DB_NAME }}
          PORT   : ${{ env.PORT  || 8000}}
          JWT_SECRET: ${{ env.JWT_SECRET }}
          # EMAIL_USER : ${{ env.EMAIL_USER }}
          # EMAIL_PASS : ${{ env.EMAIL_PASS }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@3.84.5.105 << EOF
            # Navigate to your app's directory
            cd /home/ubuntu/nearest_class_finder_backend

            ls -la
            pwd 

            # Pull the latest changes from GitHub
            git reset --hard
            git pull origin main --force

            # Install any new dependencies
            npm install

            # If you have environment variables, create/update .env file (optional)
            echo "DB_USER=${DB_USER}" > .env
            echo "DB_PASS=${DB_PASS}" >> .env
            echo "DB_HOST=${DB_HOST}" >> .env
            echo "DB_NAME=${DB_NAME}" >> .env
            echo "PORT = ${PORT} " >> .env
            echo "JWT_SECRET=${JWT_SECRET}" >> .env
            # echo "EMAIL_USER=${EMAIL_USER}" >> .env
            # echo "EMAIL_PASS=${EMAIL_PASS}" >> .env

            # Restart the Node.js application (using pm2 or another process manager)
            pm2 restart nearest_class_finder_backend

            # If MySQL is involved, ensure the database is running
            sudo systemctl restart mysql
            sudo systemctl restart nginx
          EOF
